{"version":3,"sources":["webpack:///bundle.7aa5c101f5f311137a47.js","webpack:///webpack/bootstrap 19d64162575fcb3230f0","webpack:///./src/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","passwordGenerator","displayLogic","child","document","getElementsByTagName","inputLength","parent","parentNode","arr","Array","prototype","indexOf","children","character","innerHTML","currentCharacter","aRR","outputFieldValue","outputField","value","replace","enableButton","copyPasswordBtn","classList","remove","add","allowedCharactersFieldValue","length","disableButton","automate","allowedCharacter","lowercaseCharacters","l","uppercaseCharacters","u","numbers","n","symbolCharacters","s","errorBox","style","color","errorBoxSmall","passwordUpdate","charAt","passwordUpdateSmall","larger","getElementsByClassName","backgroundColor","padding","fontSize","userApi","allowedCharactersField","addEventListener","Math","floor","random","i","code","createElement","appendChild","passwordAnalyser","displayPasswordLength","getElementById","aA","aA_percentage","a_Total","split","A_Total","derived_aA_percentage","aA_to_1_decimalplace","Number","round","height","nN","nN_percentage","n_Total","N_Total","derived_nN_percentage","nN_to_1_decimalplace","sS","sS_percentage","s_Total","S_Total","derived_sS_percentage","sS_to_1_decimalplace","add_aA_nN","displayRatio","backgroundImage","approximateTotal","passwordStrength","noStrengthColors","colorBox_1","colorBox_2","colorBox_3","weakPasswordColors","fairPasswordColors","strongPasswordColors","strength","passwordCommentBox","passwordCommentBoxSmall","match","copyPassword","select","setSelectionRange","execCommand","anAllowedCharacters","event","test","key","preventDefault","e","collapseButton_1","howToUseTheApp","toggle","collapseButton_2","about","toggle2"],"mappings":"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","file":"bundle.7aa5c101f5f311137a47.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(2);\n\t\n\t(function () {\n\t\n\t    var allowedCharactersField = document.getElementById('allowedCharactersField');\n\t    var outputField = document.getElementById('outputField');\n\t    var passwordUpdate = document.getElementById('passwordUpdate');\n\t    var passwordUpdateSmall = document.getElementById('passwordUpdateSmall');\n\t    var copyPasswordBtn = document.getElementById('copyPasswordBtn');\n\t    var userApi = document.getElementById('userApi');\n\t    var errorBox = document.getElementById('errorBox');\n\t    var errorBoxSmall = document.getElementById('errorBoxSmall');\n\t\n\t    /*=================== PASSWORD GENERATOR: ========================\n\t    Treat it like a different app i.e. put it in a different function.\n\t    =================================================================*/\n\t\n\t    function passwordGenerator() {\n\t\n\t        var lowercaseCharacters = 'abcdefghijklmnopqrstuvwxyz';\n\t        var uppercaseCharacters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\t        var symbolCharacters = '~!@#$%^&*-_+=<>?';\n\t        var numbers = '0123456789';\n\t\n\t        /*==========================================================\n\t        Generate random numbers to be used later from the characters\n\t        above======================================================*/\n\t        var l = Math.floor(Math.random() * lowercaseCharacters.length);\n\t        var u = Math.floor(Math.random() * uppercaseCharacters.length);\n\t        var s = Math.floor(Math.random() * symbolCharacters.length);\n\t        var n = Math.floor(Math.random() * numbers.length);\n\t\n\t        /*===========================================================================\n\t        if you declare let allowedCharactersFieldValue = allowedCharactersField.value;\n\t        outside password generator function, it won't work on user input\n\t        ============================================================================*/\n\t        var allowedCharactersFieldValue = allowedCharactersField.value;\n\t        var inputLength = allowedCharactersFieldValue.length;\n\t        inputLength -= 1;\n\t\n\t        var currentCharacter = allowedCharactersFieldValue.charAt(inputLength);\n\t        userApi.innerHTML = allowedCharactersFieldValue + ':  ';\n\t\n\t        /*=======================================================\n\t        create code elements for user input processing/conversion\n\t        ========================================================*/\n\t        for (var i = 0; i <= 64; i++) {\n\t            var code = document.createElement(\"code\");\n\t            userApi.appendChild(code);\n\t        }\n\t\n\t        function displayLogic() {\n\t\n\t            /*====================================================================\n\t            Use inputLength to find actual array index number of the code elements\n\t            and store inside arr variable (technically, inputLength and arr are one\n\t            and the same...)\n\t            =====================================================================*/\n\t            var child = document.getElementsByTagName('code')[inputLength];\n\t            var parent = child.parentNode;\n\t            var arr = Array.prototype.indexOf.call(parent.children, child);\n\t\n\t            /*================================================================================\n\t            arr increases as user types the allowed characters into the allowedCharactersField,\n\t            and the current code element is filled with the converted values from the automate\n\t            function.\n\t            =================================================================================*/\n\t            var character = document.getElementsByTagName('code');\n\t            character[arr].innerHTML = '' + currentCharacter;\n\t\n\t            /*==============================================\n\t            The goal is to get both user input and generated\n\t            password to be displayed in the format described\n\t            below.\n\t            e.g Using a 10 digit password as example, code\n\t            elements from index 0 - 9 will be filled up in\n\t            the manner below.\n\t             When user is typing in characters:\n\t            0\n\t            01\n\t            012\n\t            0123\n\t            01234\n\t            012345\n\t            0123456\n\t            01234567\n\t            012345678\n\t            0123456789\n\t             When user keeps pressing backspace to remove previously\n\t            entered characters:\n\t             0123456789\n\t            012345678\n\t            01234567\n\t            0123456\n\t            012345\n\t            01234\n\t            0123\n\t            012\n\t            01\n\t            0\n\t             To achieve this I get the next code element (with ARR += 1)\n\t            and fill it with empty string. aRR -= 1 then cleans up any\n\t            bug created in the process when code elements are cleaned up\n\t            to array index of -1.\n\t            ==========================================================*/\n\t            var aRR = arr;\n\t            aRR += 1;\n\t            character[aRR].innerHTML = '';\n\t\n\t            if (arr < 0 && inputLength < 0) {\n\t                aRR -= 1;\n\t                character[aRR].innerHTML = '';\n\t            }\n\t\n\t            /*==================================================\n\t            Display the code elements content in the outputField\n\t            ===================================================*/\n\t            var outputFieldValue = '' + character[0].innerHTML + character[1].innerHTML + character[2].innerHTML + character[3].innerHTML + character[4].innerHTML + character[5].innerHTML + character[6].innerHTML + character[7].innerHTML + character[8].innerHTML + character[9].innerHTML + character[10].innerHTML + character[11].innerHTML + character[12].innerHTML + character[13].innerHTML + character[14].innerHTML + character[15].innerHTML + character[16].innerHTML + character[17].innerHTML + character[18].innerHTML + character[19].innerHTML + character[20].innerHTML + character[21].innerHTML + character[22].innerHTML + character[23].innerHTML + character[24].innerHTML + character[25].innerHTML + character[26].innerHTML + character[27].innerHTML + character[28].innerHTML + character[29].innerHTML + character[30].innerHTML + character[31].innerHTML + character[32].innerHTML + character[33].innerHTML + character[34].innerHTML + character[35].innerHTML + character[36].innerHTML + character[37].innerHTML + character[38].innerHTML + character[39].innerHTML + character[40].innerHTML + character[41].innerHTML + character[42].innerHTML + character[43].innerHTML + character[44].innerHTML + character[45].innerHTML + character[46].innerHTML + character[47].innerHTML + character[48].innerHTML + character[49].innerHTML + character[50].innerHTML + character[51].innerHTML + character[52].innerHTML + character[53].innerHTML + character[54].innerHTML + character[55].innerHTML + character[56].innerHTML + character[57].innerHTML + character[58].innerHTML + character[59].innerHTML + character[60].innerHTML + character[61].innerHTML + character[62].innerHTML + character[63].innerHTML;\n\t            outputField.value = outputFieldValue;\n\t\n\t            //input fields output these signs as &amp; &lt; &gt; - Replace with & < >\n\t            outputField.value = outputField.value.replace(/&amp;/g, '&').replace(/&lt;/g, '<').replace(/&gt;/g, '>');\n\t        }\n\t\n\t        function enableButton() {\n\t            copyPasswordBtn.classList.remove('lightgrey');\n\t            copyPasswordBtn.classList.add('darkgrey');\n\t            if (allowedCharactersFieldValue.length < 8) {\n\t                copyPasswordBtn.classList.remove('darkgrey');\n\t                copyPasswordBtn.classList.add('lightgrey');\n\t            }\n\t        }\n\t\n\t        function disableButton() {\n\t            copyPasswordBtn.classList.remove('darkgrey');\n\t            copyPasswordBtn.classList.add('lightgrey');\n\t        }\n\t\n\t        var allowedCharacter = [currentCharacter === 'a', currentCharacter === 'A', currentCharacter === 'n', currentCharacter === 'N', currentCharacter === 's', currentCharacter === 'S'];\n\t\n\t        function automate() {\n\t            /*===========================================================\n\t            Listen for allowed characters a, A, n, N, s and S and convert:\n\t            1. a to random lowercase alphabeth\n\t            2. A to random uppercase alphabeth\n\t            3. n and N to random number\n\t            4. s and S to random symbol\n\t            ==============================================================*/\n\t            if (allowedCharacter[0]) {\n\t                currentCharacter = lowercaseCharacters[l];\n\t            }\n\t\n\t            if (allowedCharacter[1]) {\n\t                currentCharacter = uppercaseCharacters[u];\n\t            }\n\t\n\t            if (allowedCharacter[2]) {\n\t                currentCharacter = numbers[n];\n\t            }\n\t\n\t            if (allowedCharacter[3]) {\n\t                currentCharacter = numbers[n];\n\t            }\n\t\n\t            if (allowedCharacter[4]) {\n\t                currentCharacter = symbolCharacters[s];\n\t            }\n\t\n\t            if (allowedCharacter[5]) {\n\t                currentCharacter = symbolCharacters[s];\n\t            }\n\t\n\t            if (allowedCharactersFieldValue.length < 8) {\n\t                disableButton();\n\t            } else {\n\t                enableButton();\n\t            }\n\t\n\t            //Execution\n\t            if (!allowedCharacter[0] && !allowedCharacter[1] && !allowedCharacter[2] && !allowedCharacter[3] && !allowedCharacter[4] && !allowedCharacter[5] && allowedCharactersFieldValue.length === 0) {\n\t                errorBox.innerHTML = 'Success or error message displays here';\n\t                errorBox.style.color = 'grey';\n\t                errorBoxSmall.innerHTML = 'Success or error message here';\n\t                errorBoxSmall.style.color = 'grey';\n\t                passwordUpdate.innerHTML = 'Latest update to password displays here';\n\t                passwordUpdate.style.color = 'grey';\n\t                passwordUpdateSmall.innerHTML = 'Latest update to password here';\n\t                passwordUpdateSmall.style.color = 'grey';\n\t                userApi.innerHTML = 'Final value displays here';\n\t                userApi.style.color = 'grey';\n\t                outputField.value = '';\n\t            } else {\n\t                errorBox.innerHTML = 'Ride on!';\n\t                errorBox.style.color = 'blue';\n\t                errorBoxSmall.innerHTML = 'Ride on!';\n\t                errorBoxSmall.style.color = 'blue';\n\t                passwordUpdate.innerHTML = '<mark class=\"larger\">' + allowedCharactersFieldValue.charAt(inputLength) + '</mark> randomly added <mark class=\"larger\">' + currentCharacter + '</mark> to your password combo';\n\t                passwordUpdate.style.color = '#000';\n\t                passwordUpdateSmall.innerHTML = '<mark class=\"larger\">' + allowedCharactersFieldValue.charAt(inputLength) + '</mark> added <mark class=\"larger\">' + currentCharacter + '</mark> to your password';\n\t                passwordUpdateSmall.style.color = '#000';\n\t                var larger = document.getElementsByClassName('larger');\n\t                larger[0].style.color = 'white';\n\t                larger[1].style.color = 'white';\n\t                larger[2].style.color = 'white';\n\t                larger[3].style.color = 'white';\n\t                larger[0].style.backgroundColor = '#222';\n\t                larger[1].style.backgroundColor = '#222';\n\t                larger[2].style.backgroundColor = '#222';\n\t                larger[3].style.backgroundColor = '#222';\n\t                larger[0].style.padding = '0 4px';\n\t                larger[1].style.padding = '2px';\n\t                larger[2].style.padding = '0 4px';\n\t                larger[3].style.padding = '2px';\n\t                larger[0].style.fontSize = '1.1em';\n\t                larger[1].style.fontSize = '1.1em';\n\t                larger[2].style.fontSize = '1.1em';\n\t                larger[3].style.fontSize = '1.1em';\n\t                userApi.style.color = 'black';\n\t                allowedCharactersField.addEventListener('keyup', displayLogic);\n\t            }\n\t        }\n\t\n\t        automate();\n\t    }\n\t\n\t    /*=================== PASSWORD ANALYSER: =============================\n\t               (Ratio & graphical analysis calculations)\n\t     Treat it like a different app i.e. putting it in a different function.\n\t     =====================================================================*/\n\t\n\t    function passwordAnalyser() {\n\t\n\t        var allowedCharactersFieldValue = allowedCharactersField.value;\n\t        var displayPasswordLength = document.getElementById('displayPasswordLength');\n\t        displayPasswordLength.innerHTML = 'Password Length: ' + allowedCharactersFieldValue.length;\n\t\n\t        //calculate for a & A\n\t        var aA = document.getElementById('aA');\n\t        var aA_percentage = document.getElementById('aA_percentage');\n\t        var a_Total = allowedCharactersFieldValue.split('a').length - 1;\n\t        var A_Total = allowedCharactersFieldValue.split('A').length - 1;\n\t        var derived_aA_percentage = (a_Total + A_Total) / allowedCharactersFieldValue.length * 100;\n\t        /*=======================================================================\n\t        exponential equation calculation: 'e1' & 'e-1' for 1 decimal place, 'e2'\n\t        & 'e-2' for 2 decimal places etc. I'm using 1 decimal place for this app.\n\t        ========================================================================*/\n\t        var aA_to_1_decimalplace = Number(Math.round(derived_aA_percentage + 'e1') + 'e-1');\n\t        aA_percentage.innerHTML = aA_to_1_decimalplace + '%';\n\t        aA.style.height = aA_to_1_decimalplace + '%';\n\t\n\t        //calculate for n & N\n\t        var nN = document.getElementById('nN');\n\t        var nN_percentage = document.getElementById('nN_percentage');\n\t        var n_Total = allowedCharactersFieldValue.split('n').length - 1;\n\t        var N_Total = allowedCharactersFieldValue.split('N').length - 1;\n\t        var derived_nN_percentage = (n_Total + N_Total) / allowedCharactersFieldValue.length * 100;\n\t        var nN_to_1_decimalplace = Number(Math.round(derived_nN_percentage + 'e1') + 'e-1');\n\t        nN_percentage.innerHTML = nN_to_1_decimalplace + '%';\n\t        nN.style.height = nN_to_1_decimalplace + '%';\n\t\n\t        //calculate for s & S\n\t        var sS = document.getElementById('sS');\n\t        var sS_percentage = document.getElementById('sS_percentage');\n\t        var s_Total = allowedCharactersFieldValue.split('s').length - 1;\n\t        var S_Total = allowedCharactersFieldValue.split('S').length - 1;\n\t        var derived_sS_percentage = (s_Total + S_Total) / allowedCharactersFieldValue.length * 100;\n\t        var sS_to_1_decimalplace = Number(Math.round(derived_sS_percentage + 'e1') + 'e-1');\n\t        sS_percentage.innerHTML = sS_to_1_decimalplace + '%';\n\t        sS.style.height = sS_to_1_decimalplace + '%';\n\t\n\t        var add_aA_nN = aA_to_1_decimalplace + nN_to_1_decimalplace;\n\t\n\t        var displayRatio = document.getElementById('displayRatio');\n\t        displayRatio.style.backgroundImage = 'linear-gradient(to right, #0059ff ' + aA_to_1_decimalplace + '%, #02ec7f ' + aA_to_1_decimalplace + '%, #02ec7f ' + add_aA_nN + '%, #ff7b00 ' + add_aA_nN + '%)';\n\t\n\t        var approximateTotal = document.getElementById('approximateTotal');\n\t        approximateTotal.innerHTML = 'Note: aA% + nN% + sS% &#8773 100%';\n\t        approximateTotal.style.color = 'black';\n\t\n\t        if (allowedCharactersFieldValue.length === 0) {\n\t            aA.style.height = '0px';\n\t            nN.style.height = '0px';\n\t            sS.style.height = '0px';\n\t            aA_percentage.innerHTML = '0%'; //to avoid writing NaN when back to zero etc.\n\t            nN_percentage.innerHTML = '0%';\n\t            sS_percentage.innerHTML = '0%';\n\t            displayRatio.style.backgroundImage = 'none';\n\t            approximateTotal.style.color = 'grey';\n\t        }\n\t    }\n\t\n\t    /*=================== PASSWORD STRENGTH: =========================\n\t    Treat it like a different app i.e. put it in a different function.\n\t    =================================================================*/\n\t\n\t    function passwordStrength() {\n\t\n\t        var allowedCharactersFieldValue = allowedCharactersField.value;\n\t        var strength = 0;\n\t\n\t        var passwordCommentBox = document.getElementById('passwordCommentBox');\n\t        var passwordCommentBoxSmall = document.getElementById('passwordCommentBoxSmall');\n\t\n\t        if (allowedCharactersFieldValue.length < 1) {\n\t            passwordCommentBox.innerHTML = '8 characters min | 64 characters max';\n\t            passwordCommentBox.classList.remove('black');\n\t            passwordCommentBox.classList.add('grey');\n\t            passwordCommentBoxSmall.innerHTML = '8 char min | 64 char max';\n\t            passwordCommentBoxSmall.classList.remove('black');\n\t            passwordCommentBoxSmall.classList.add('grey');\n\t        } else {\n\t            passwordCommentBox.innerHTML = 'Too short';\n\t            passwordCommentBox.classList.add('black');\n\t            passwordCommentBoxSmall.innerHTML = 'Too short';\n\t            passwordCommentBoxSmall.classList.add('black');\n\t        }\n\t\n\t        //whatever you type in first: whether its an alphabeth, number or symbol password strength increases by 1\n\t        if (allowedCharactersFieldValue.length > 0) strength += 1;\n\t\n\t        //increase length by 1 for a mix of alphabeth and number\n\t        if (allowedCharactersFieldValue.match(/([a,A])/) && allowedCharactersFieldValue.match(/([n,N])/)) strength += 1;\n\t\n\t        //increase length by 1 for a mix of alphabeth and symbol\n\t        if (allowedCharactersFieldValue.match(/([a,A])/) && allowedCharactersFieldValue.match(/([s,S])/)) strength += 1;\n\t\n\t        //increase length by 1 for a mix of lowercase and uppercase alphabeths\n\t        if (allowedCharactersFieldValue.match(/([a])/) && allowedCharactersFieldValue.match(/([A])/)) strength += 1;\n\t\n\t        //increase length by 1 for a mix of number and symbol\n\t        if (allowedCharactersFieldValue.match(/([n,N])/) && allowedCharactersFieldValue.match(/([s,S])/)) strength += 1;\n\t\n\t        var colorBox_1 = document.getElementById('colorBox_1');\n\t        var colorBox_2 = document.getElementById('colorBox_2');\n\t        var colorBox_3 = document.getElementById('colorBox_3');\n\t\n\t        function noStrengthColors() {\n\t            colorBox_1.classList.remove('weak', 'fair', 'strong');\n\t            colorBox_2.classList.remove('weak', 'fair', 'strong');\n\t            colorBox_3.classList.remove('weak', 'fair', 'strong');\n\t        }\n\t\n\t        function weakPasswordColors() {\n\t            colorBox_1.classList.remove('fair');\n\t            colorBox_1.classList.add('weak');\n\t            colorBox_2.classList.remove('fair');\n\t            colorBox_2.classList.add('lightgrey');\n\t        }\n\t\n\t        function fairPasswordColors() {\n\t            colorBox_1.classList.add('fair');\n\t            colorBox_2.classList.add('fair');\n\t            colorBox_3.classList.add('lightgrey');\n\t            colorBox_1.classList.remove('strong');\n\t            colorBox_2.classList.remove('strong');\n\t            colorBox_3.classList.remove('strong');\n\t        }\n\t\n\t        function strongPasswordColors() {\n\t            colorBox_1.classList.add('strong');\n\t            colorBox_2.classList.add('strong');\n\t            colorBox_3.classList.add('strong');\n\t        }\n\t\n\t        if (strength < 1) {\n\t            noStrengthColors();\n\t        } else if (strength === 1 && allowedCharactersFieldValue.length < 8) {\n\t            passwordCommentBox.innerHTML = 'Weak - Too short';\n\t            passwordCommentBoxSmall.innerHTML = 'Weak - Too short';\n\t            weakPasswordColors();\n\t        } else if (strength === 1 && allowedCharactersFieldValue.length >= 8) {\n\t            passwordCommentBox.innerHTML = 'Weak Password';\n\t            passwordCommentBoxSmall.innerHTML = 'Weak Password';\n\t            weakPasswordColors();\n\t        } else if (strength === 2 && allowedCharactersFieldValue.length < 8) {\n\t            passwordCommentBox.innerHTML = 'Fair - Too short';\n\t            passwordCommentBoxSmall.innerHTML = 'Fair - Too short';\n\t            fairPasswordColors();\n\t        } else if (strength === 2 && allowedCharactersFieldValue.length >= 8) {\n\t            passwordCommentBox.innerHTML = 'Fair Password';\n\t            passwordCommentBoxSmall.innerHTML = 'Fair Password';\n\t            fairPasswordColors();\n\t        } else if (strength >= 3 && allowedCharactersFieldValue.length < 8) {\n\t            passwordCommentBox.innerHTML = 'Strong - Too short';\n\t            passwordCommentBoxSmall.innerHTML = 'Strong - Too short';\n\t            strongPasswordColors();\n\t        } else {\n\t            passwordCommentBox.innerHTML = 'Strong Password';\n\t            passwordCommentBoxSmall.innerHTML = 'Strong Password';\n\t            strongPasswordColors();\n\t        }\n\t    }\n\t\n\t    //call the three functions on input\n\t    allowedCharactersField.addEventListener('input', function () {\n\t        passwordGenerator();\n\t        passwordAnalyser();\n\t        passwordStrength();\n\t    });\n\t\n\t    /*==========================================================\n\t        Disable all other keys apart from a A n N s S. I'm using\n\t        keypress event so that some other keys like the shift key\n\t        and the backspace dosen't stop working.\n\t    =============================================================*/\n\t\n\t    var anAllowedCharacters = /([a,A,n,N,s,S])/;\n\t    //let comma =\n\t    allowedCharactersField.addEventListener('keypress', function (event) {\n\t        if (!anAllowedCharacters.test(event.key)) {\n\t            event.preventDefault();\n\t            errorBox.innerHTML = 'Character not allowed!';\n\t            errorBox.style.color = 'red';\n\t            errorBoxSmall.innerHTML = 'Character not allowed!';\n\t            errorBoxSmall.style.color = 'red';\n\t            passwordUpdate.innerHTML = 'Type in any of these alphabeths: aAnNsS';\n\t            passwordUpdate.style.color = 'black';\n\t            passwordUpdateSmall.innerHTML = 'Type in any of these: aAnNsS';\n\t            passwordUpdateSmall.style.color = 'black';\n\t        }\n\t\n\t        if (','.test(event.key)) {\n\t            event.preventDefault();\n\t            errorBox.innerHTML = 'Character not allowed!';\n\t            errorBox.style.color = 'red';\n\t            errorBoxSmall.innerHTML = 'Character not allowed!';\n\t            errorBoxSmall.style.color = 'red';\n\t            passwordUpdate.innerHTML = 'Type in any of these alphabeths: aAnNsS';\n\t            passwordUpdate.style.color = 'black';\n\t            passwordUpdateSmall.innerHTML = 'Type in any of these: aAnNsS';\n\t            passwordUpdateSmall.style.color = 'black';\n\t        }\n\t    });\n\t\n\t    //copy password\n\t    function copyPassword() {\n\t        var allowedCharactersFieldValue = allowedCharactersField.value;\n\t\n\t        if (allowedCharactersFieldValue.length >= 8) {\n\t            outputField.select();\n\t            outputField.setSelectionRange(0, 99999);\n\t            document.execCommand('copy');\n\t        }\n\t    }\n\t\n\t    //copy execution on click\n\t    copyPasswordBtn.addEventListener('click', function (e) {\n\t        e.preventDefault();\n\t        copyPassword();\n\t    });\n\t\n\t    //collapse buttons\n\t    var collapseButton_1 = document.getElementById('collapseButton_1');\n\t    var howToUseTheApp = document.getElementById('howToUseTheApp');\n\t    var toggle = 0;\n\t    collapseButton_1.addEventListener('click', function () {\n\t        toggle++;\n\t        if (toggle === 1) {\n\t            howToUseTheApp.classList.remove('collapse');\n\t            howToUseTheApp.classList.add('expand');\n\t        }\n\t\n\t        if (toggle === 2) {\n\t            howToUseTheApp.classList.remove('expand');\n\t            howToUseTheApp.classList.add('collapse');\n\t            toggle = 1;\n\t            toggle--;\n\t        }\n\t    });\n\t\n\t    var collapseButton_2 = document.getElementById('collapseButton_2');\n\t    var about = document.getElementById('about');\n\t    var toggle2 = 0;\n\t    collapseButton_2.addEventListener('click', function () {\n\t        toggle2++;\n\t        if (toggle2 === 1) {\n\t            about.classList.remove('collapse');\n\t            about.classList.add('expand');\n\t        }\n\t\n\t        if (toggle2 === 2) {\n\t            about.classList.remove('expand');\n\t            about.classList.add('collapse');\n\t            toggle2 = 1;\n\t            toggle2--;\n\t        }\n\t    });\n\t})();\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.7aa5c101f5f311137a47.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 19d64162575fcb3230f0\n **/","\nimport './css/index.css';\n\n(function(){\n\n    let allowedCharactersField = document.getElementById('allowedCharactersField');\n    let outputField = document.getElementById('outputField');\n    let passwordUpdate = document.getElementById('passwordUpdate');\n    let passwordUpdateSmall = document.getElementById('passwordUpdateSmall');\n    let copyPasswordBtn = document.getElementById('copyPasswordBtn');\n    let userApi = document.getElementById('userApi');\n    let errorBox = document.getElementById('errorBox');\n    let errorBoxSmall = document.getElementById('errorBoxSmall');\n\n    /*=================== PASSWORD GENERATOR: ========================\n    Treat it like a different app i.e. put it in a different function.\n    =================================================================*/\n\n    function passwordGenerator() {\n\n        let lowercaseCharacters = 'abcdefghijklmnopqrstuvwxyz';\n        let uppercaseCharacters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        let symbolCharacters = '~!@#$%^&*-_+=<>?';\n        let numbers = '0123456789';\n\n        /*==========================================================\n        Generate random numbers to be used later from the characters\n        above======================================================*/\n        let l = Math.floor(Math.random()*lowercaseCharacters.length);\n        let u = Math.floor(Math.random()*uppercaseCharacters.length);\n        let s = Math.floor(Math.random()*symbolCharacters.length);\n        let n = Math.floor(Math.random()*numbers.length);\n\n        /*===========================================================================\n        if you declare let allowedCharactersFieldValue = allowedCharactersField.value;\n        outside password generator function, it won't work on user input\n        ============================================================================*/\n        let allowedCharactersFieldValue = allowedCharactersField.value;\n        let inputLength = allowedCharactersFieldValue.length;\n        inputLength -= 1;\n\n        let currentCharacter = allowedCharactersFieldValue.charAt(inputLength);\n        userApi.innerHTML = `${allowedCharactersFieldValue}:  `;\n\n        /*=======================================================\n        create code elements for user input processing/conversion\n        ========================================================*/\n        for (let i = 0; i <= 64; i++) {\n            let code = document.createElement(\"code\");\n            userApi.appendChild(code);\n        }\n\n\n        function displayLogic() {\n\n            /*====================================================================\n            Use inputLength to find actual array index number of the code elements\n            and store inside arr variable (technically, inputLength and arr are one\n            and the same...)\n            =====================================================================*/\n            let child = document.getElementsByTagName('code')[inputLength];\n            let parent = child.parentNode;\n            let arr = Array.prototype.indexOf.call(parent.children, child);\n\n            /*================================================================================\n            arr increases as user types the allowed characters into the allowedCharactersField,\n            and the current code element is filled with the converted values from the automate\n            function.\n            =================================================================================*/\n            let character = document.getElementsByTagName('code');\n            character[arr].innerHTML = `${currentCharacter}`;\n\n            /*==============================================\n            The goal is to get both user input and generated\n            password to be displayed in the format described\n            below.\n            e.g Using a 10 digit password as example, code\n            elements from index 0 - 9 will be filled up in\n            the manner below.\n\n            When user is typing in characters:\n            0\n            01\n            012\n            0123\n            01234\n            012345\n            0123456\n            01234567\n            012345678\n            0123456789\n\n            When user keeps pressing backspace to remove previously\n            entered characters:\n\n            0123456789\n            012345678\n            01234567\n            0123456\n            012345\n            01234\n            0123\n            012\n            01\n            0\n\n            To achieve this I get the next code element (with ARR += 1)\n            and fill it with empty string. aRR -= 1 then cleans up any\n            bug created in the process when code elements are cleaned up\n            to array index of -1.\n            ==========================================================*/\n            let aRR = arr;\n            aRR += 1;\n            character[aRR].innerHTML = '';\n\n            if (arr < 0 && inputLength < 0) {\n            aRR -= 1;\n            character[aRR].innerHTML = '';\n            }\n\n            /*==================================================\n            Display the code elements content in the outputField\n            ===================================================*/\n            let outputFieldValue = `${character[0].innerHTML}${character[1].innerHTML}${character[2].innerHTML}${character[3].innerHTML}${character[4].innerHTML}${character[5].innerHTML}${character[6].innerHTML}${character[7].innerHTML}${character[8].innerHTML}${character[9].innerHTML}${character[10].innerHTML}${character[11].innerHTML}${character[12].innerHTML}${character[13].innerHTML}${character[14].innerHTML}${character[15].innerHTML}${character[16].innerHTML}${character[17].innerHTML}${character[18].innerHTML}${character[19].innerHTML}${character[20].innerHTML}${character[21].innerHTML}${character[22].innerHTML}${character[23].innerHTML}${character[24].innerHTML}${character[25].innerHTML}${character[26].innerHTML}${character[27].innerHTML}${character[28].innerHTML}${character[29].innerHTML}${character[30].innerHTML}${character[31].innerHTML}${character[32].innerHTML}${character[33].innerHTML}${character[34].innerHTML}${character[35].innerHTML}${character[36].innerHTML}${character[37].innerHTML}${character[38].innerHTML}${character[39].innerHTML}${character[40].innerHTML}${character[41].innerHTML}${character[42].innerHTML}${character[43].innerHTML}${character[44].innerHTML}${character[45].innerHTML}${character[46].innerHTML}${character[47].innerHTML}${character[48].innerHTML}${character[49].innerHTML}${character[50].innerHTML}${character[51].innerHTML}${character[52].innerHTML}${character[53].innerHTML}${character[54].innerHTML}${character[55].innerHTML}${character[56].innerHTML}${character[57].innerHTML}${character[58].innerHTML}${character[59].innerHTML}${character[60].innerHTML}${character[61].innerHTML}${character[62].innerHTML}${character[63].innerHTML}`;\n            outputField.value = outputFieldValue;\n\n            //input fields output these signs as &amp; &lt; &gt; - Replace with & < >\n            outputField.value = outputField.value.replace(/&amp;/g, '&').replace(/&lt;/g, '<').replace(/&gt;/g, '>');\n        }\n\n        function enableButton() {\n            copyPasswordBtn.classList.remove('lightgrey');\n            copyPasswordBtn.classList.add('darkgrey');\n            if (allowedCharactersFieldValue.length < 8) {\n                copyPasswordBtn.classList.remove('darkgrey');\n                copyPasswordBtn.classList.add('lightgrey');\n            }\n        }\n\n        function disableButton() {\n            copyPasswordBtn.classList.remove('darkgrey');\n            copyPasswordBtn.classList.add('lightgrey');\n        }\n\n\n\n        let allowedCharacter = [\n            currentCharacter === 'a',\n            currentCharacter === 'A',\n            currentCharacter === 'n',\n            currentCharacter === 'N',\n            currentCharacter === 's',\n            currentCharacter === 'S'\n        ]\n\n        function automate() {\n            /*===========================================================\n            Listen for allowed characters a, A, n, N, s and S and convert:\n            1. a to random lowercase alphabeth\n            2. A to random uppercase alphabeth\n            3. n and N to random number\n            4. s and S to random symbol\n            ==============================================================*/\n            if (allowedCharacter[0]) {\n                currentCharacter = lowercaseCharacters[l];\n            }\n\n            if (allowedCharacter[1]) {\n                currentCharacter = uppercaseCharacters[u];\n            }\n\n            if (allowedCharacter[2]) {\n                currentCharacter = numbers[n];\n            }\n\n            if (allowedCharacter[3]) {\n                currentCharacter = numbers[n];\n            }\n\n            if (allowedCharacter[4]) {\n                currentCharacter = symbolCharacters[s];\n            }\n\n            if (allowedCharacter[5]) {\n                currentCharacter = symbolCharacters[s];\n            }\n\n            if (allowedCharactersFieldValue.length < 8) {\n                disableButton();\n            }else {\n                enableButton();\n            }\n\n            //Execution\n            if (!allowedCharacter[0] && !allowedCharacter[1] && !allowedCharacter[2] && !allowedCharacter[3] && !allowedCharacter[4] && !allowedCharacter[5] && allowedCharactersFieldValue.length === 0) {\n                errorBox.innerHTML = 'Success or error message displays here';\n                errorBox.style.color = 'grey';\n                errorBoxSmall.innerHTML = 'Success or error message here';\n                errorBoxSmall.style.color = 'grey';\n                passwordUpdate.innerHTML = 'Latest update to password displays here';\n                passwordUpdate.style.color = 'grey';\n                passwordUpdateSmall.innerHTML = 'Latest update to password here';\n                passwordUpdateSmall.style.color = 'grey';\n                userApi.innerHTML = 'Final value displays here';\n                userApi.style.color = 'grey';\n                outputField.value = '';\n            }else {\n                errorBox.innerHTML = 'Ride on!';\n                errorBox.style.color = 'blue';\n                errorBoxSmall.innerHTML = 'Ride on!';\n                errorBoxSmall.style.color = 'blue';\n                passwordUpdate.innerHTML = `<mark class=\"larger\">${allowedCharactersFieldValue.charAt(inputLength)}</mark> randomly added <mark class=\"larger\">${currentCharacter}</mark> to your password combo`;\n                passwordUpdate.style.color = '#000';\n                passwordUpdateSmall.innerHTML = `<mark class=\"larger\">${allowedCharactersFieldValue.charAt(inputLength)}</mark> added <mark class=\"larger\">${currentCharacter}</mark> to your password`;\n                passwordUpdateSmall.style.color = '#000';\n                let larger = document.getElementsByClassName('larger');\n                larger[0].style.color = 'white';\n                larger[1].style.color = 'white';\n                larger[2].style.color = 'white';\n                larger[3].style.color = 'white';\n                larger[0].style.backgroundColor = '#222';\n                larger[1].style.backgroundColor = '#222';\n                larger[2].style.backgroundColor = '#222';\n                larger[3].style.backgroundColor = '#222';\n                larger[0].style.padding = '0 4px';\n                larger[1].style.padding = '2px';\n                larger[2].style.padding = '0 4px';\n                larger[3].style.padding = '2px';\n                larger[0].style.fontSize = '1.1em';\n                larger[1].style.fontSize = '1.1em';\n                larger[2].style.fontSize = '1.1em';\n                larger[3].style.fontSize = '1.1em';\n                userApi.style.color = 'black';\n                allowedCharactersField.addEventListener('keyup', displayLogic);\n            }\n        }\n\n        automate();\n    }\n\n\n   /*=================== PASSWORD ANALYSER: =============================\n              (Ratio & graphical analysis calculations)\n    Treat it like a different app i.e. putting it in a different function.\n    =====================================================================*/\n\n    function passwordAnalyser() {\n\n        let allowedCharactersFieldValue = allowedCharactersField.value;\n        let displayPasswordLength = document.getElementById('displayPasswordLength');\n        displayPasswordLength.innerHTML = `Password Length: ${allowedCharactersFieldValue.length}`;\n\n        //calculate for a & A\n        let aA = document.getElementById('aA');\n        let aA_percentage = document.getElementById('aA_percentage');\n        let a_Total = allowedCharactersFieldValue.split('a').length - 1;\n        let A_Total = allowedCharactersFieldValue.split('A').length - 1;\n        let derived_aA_percentage = ((a_Total+A_Total)/allowedCharactersFieldValue.length)*100;\n        /*=======================================================================\n        exponential equation calculation: 'e1' & 'e-1' for 1 decimal place, 'e2'\n        & 'e-2' for 2 decimal places etc. I'm using 1 decimal place for this app.\n        ========================================================================*/\n        let aA_to_1_decimalplace = Number(Math.round(derived_aA_percentage + 'e1') + 'e-1');\n        aA_percentage.innerHTML = `${aA_to_1_decimalplace}%`;\n        aA.style.height = `${aA_to_1_decimalplace}%`;\n\n        //calculate for n & N\n        let nN = document.getElementById('nN');\n        let nN_percentage = document.getElementById('nN_percentage');\n        let n_Total = allowedCharactersFieldValue.split('n').length - 1;\n        let N_Total = allowedCharactersFieldValue.split('N').length - 1;\n        let derived_nN_percentage = ((n_Total+N_Total)/allowedCharactersFieldValue.length)*100;\n        let nN_to_1_decimalplace = Number(Math.round(derived_nN_percentage + 'e1') + 'e-1');\n        nN_percentage.innerHTML = `${nN_to_1_decimalplace}%`;\n        nN.style.height = `${nN_to_1_decimalplace}%`;\n\n        //calculate for s & S\n        let sS = document.getElementById('sS');\n        let sS_percentage = document.getElementById('sS_percentage');\n        let s_Total = allowedCharactersFieldValue.split('s').length - 1;\n        let S_Total = allowedCharactersFieldValue.split('S').length - 1;\n        let derived_sS_percentage = ((s_Total+S_Total)/allowedCharactersFieldValue.length)*100;\n        let sS_to_1_decimalplace = Number(Math.round(derived_sS_percentage + 'e1') + 'e-1');\n        sS_percentage.innerHTML = `${sS_to_1_decimalplace}%`;\n        sS.style.height = `${sS_to_1_decimalplace}%`;\n\n        let add_aA_nN = aA_to_1_decimalplace + nN_to_1_decimalplace;\n\n        let displayRatio = document.getElementById('displayRatio');\n        displayRatio.style.backgroundImage = `linear-gradient(to right, #0059ff ${aA_to_1_decimalplace}%, #02ec7f ${aA_to_1_decimalplace}%, #02ec7f ${add_aA_nN}%, #ff7b00 ${add_aA_nN}%)`;\n\n        let approximateTotal = document.getElementById('approximateTotal');\n        approximateTotal.innerHTML = 'Note: aA% + nN% + sS% &#8773 100%';\n        approximateTotal.style.color = 'black';\n\n        if (allowedCharactersFieldValue.length === 0) {\n            aA.style.height = '0px';\n            nN.style.height = '0px';\n            sS.style.height = '0px';\n            aA_percentage.innerHTML = '0%'; //to avoid writing NaN when back to zero etc.\n            nN_percentage.innerHTML = '0%';\n            sS_percentage.innerHTML = '0%';\n            displayRatio.style.backgroundImage = 'none';\n            approximateTotal.style.color = 'grey';\n        }\n    }\n\n    /*=================== PASSWORD STRENGTH: =========================\n    Treat it like a different app i.e. put it in a different function.\n    =================================================================*/\n\n    function passwordStrength() {\n\n        let allowedCharactersFieldValue = allowedCharactersField.value;\n        let strength = 0;\n\n        let passwordCommentBox = document.getElementById('passwordCommentBox');\n        let passwordCommentBoxSmall = document.getElementById('passwordCommentBoxSmall');\n\n        if (allowedCharactersFieldValue.length < 1) {\n            passwordCommentBox.innerHTML = '8 characters min | 64 characters max';\n            passwordCommentBox.classList.remove('black');\n            passwordCommentBox.classList.add('grey');\n            passwordCommentBoxSmall.innerHTML = '8 char min | 64 char max';\n            passwordCommentBoxSmall.classList.remove('black');\n            passwordCommentBoxSmall.classList.add('grey');\n        }else {\n            passwordCommentBox.innerHTML = 'Too short';\n            passwordCommentBox.classList.add('black');\n            passwordCommentBoxSmall.innerHTML = 'Too short';\n            passwordCommentBoxSmall.classList.add('black');\n        }\n\n        //whatever you type in first: whether its an alphabeth, number or symbol password strength increases by 1\n        if (allowedCharactersFieldValue.length > 0) strength += 1;\n\n        //increase length by 1 for a mix of alphabeth and number\n        if (allowedCharactersFieldValue.match(/([a,A])/) && allowedCharactersFieldValue.match(/([n,N])/)) strength += 1;\n\n        //increase length by 1 for a mix of alphabeth and symbol\n        if (allowedCharactersFieldValue.match(/([a,A])/) && allowedCharactersFieldValue.match(/([s,S])/)) strength += 1;\n\n        //increase length by 1 for a mix of lowercase and uppercase alphabeths\n        if (allowedCharactersFieldValue.match(/([a])/) && allowedCharactersFieldValue.match(/([A])/)) strength += 1;\n\n        //increase length by 1 for a mix of number and symbol\n        if (allowedCharactersFieldValue.match(/([n,N])/) && allowedCharactersFieldValue.match(/([s,S])/)) strength += 1;\n\n        let colorBox_1 = document.getElementById('colorBox_1');\n        let colorBox_2 = document.getElementById('colorBox_2');\n        let colorBox_3 = document.getElementById('colorBox_3');\n\n        function noStrengthColors(){\n            colorBox_1.classList.remove('weak', 'fair', 'strong');\n            colorBox_2.classList.remove('weak', 'fair', 'strong');\n            colorBox_3.classList.remove('weak', 'fair', 'strong');\n        }\n\n        function weakPasswordColors(){\n            colorBox_1.classList.remove('fair');\n            colorBox_1.classList.add('weak');\n            colorBox_2.classList.remove('fair');\n            colorBox_2.classList.add('lightgrey');\n        }\n\n        function fairPasswordColors(){\n            colorBox_1.classList.add('fair');\n            colorBox_2.classList.add('fair');\n            colorBox_3.classList.add('lightgrey');\n            colorBox_1.classList.remove('strong');\n            colorBox_2.classList.remove('strong');\n            colorBox_3.classList.remove('strong');\n        }\n\n        function strongPasswordColors() {\n            colorBox_1.classList.add('strong');\n            colorBox_2.classList.add('strong');\n            colorBox_3.classList.add('strong');\n        }\n\n        if (strength < 1) {\n           noStrengthColors();\n        }else if (strength === 1 && allowedCharactersFieldValue.length < 8) {\n            passwordCommentBox.innerHTML = 'Weak - Too short';\n            passwordCommentBoxSmall.innerHTML = 'Weak - Too short';\n            weakPasswordColors();\n        }else if (strength === 1 && allowedCharactersFieldValue.length >= 8) {\n            passwordCommentBox.innerHTML = 'Weak Password';\n            passwordCommentBoxSmall.innerHTML = 'Weak Password';\n            weakPasswordColors()\n        }else if (strength === 2 && allowedCharactersFieldValue.length < 8) {\n            passwordCommentBox.innerHTML = 'Fair - Too short';\n            passwordCommentBoxSmall.innerHTML = 'Fair - Too short';\n            fairPasswordColors();\n        }else if (strength === 2 && allowedCharactersFieldValue.length >= 8) {\n            passwordCommentBox.innerHTML = 'Fair Password';\n            passwordCommentBoxSmall.innerHTML = 'Fair Password';\n            fairPasswordColors();\n        }else if (strength >= 3 && allowedCharactersFieldValue.length < 8) {\n            passwordCommentBox.innerHTML = 'Strong - Too short';\n            passwordCommentBoxSmall.innerHTML = 'Strong - Too short';\n            strongPasswordColors();\n        }else {\n            passwordCommentBox.innerHTML = 'Strong Password';\n            passwordCommentBoxSmall.innerHTML = 'Strong Password';\n            strongPasswordColors();\n        }\n    }\n\n    //call the three functions on input\n    allowedCharactersField.addEventListener('input', function() {\n        passwordGenerator();\n        passwordAnalyser();\n        passwordStrength();\n    });\n\n    /*==========================================================\n        Disable all other keys apart from a A n N s S. I'm using\n        keypress event so that some other keys like the shift key\n        and the backspace dosen't stop working.\n    =============================================================*/\n\n    let anAllowedCharacters = /([a,A,n,N,s,S])/;\n    //let comma =\n    allowedCharactersField.addEventListener('keypress', event => {\n        if(!anAllowedCharacters.test(event.key)) {\n            event.preventDefault();\n            errorBox.innerHTML = `Character not allowed!`;\n            errorBox.style.color = 'red';\n            errorBoxSmall.innerHTML = `Character not allowed!`;\n            errorBoxSmall.style.color = 'red';\n            passwordUpdate.innerHTML = 'Type in any of these alphabeths: aAnNsS';\n            passwordUpdate.style.color = 'black';\n            passwordUpdateSmall.innerHTML = 'Type in any of these: aAnNsS';\n            passwordUpdateSmall.style.color = 'black';\n        }\n\n        if(','.test(event.key)) {\n          event.preventDefault();\n          errorBox.innerHTML = `Character not allowed!`;\n          errorBox.style.color = 'red';\n          errorBoxSmall.innerHTML = `Character not allowed!`;\n          errorBoxSmall.style.color = 'red';\n          passwordUpdate.innerHTML = 'Type in any of these alphabeths: aAnNsS';\n          passwordUpdate.style.color = 'black';\n          passwordUpdateSmall.innerHTML = 'Type in any of these: aAnNsS';\n          passwordUpdateSmall.style.color = 'black';\n      }\n    });\n\n    //copy password\n    function copyPassword() {\n        let allowedCharactersFieldValue = allowedCharactersField.value;\n\n        if (allowedCharactersFieldValue.length >= 8) {\n            outputField.select();\n            outputField.setSelectionRange(0, 99999);\n            document.execCommand('copy');\n        }\n    }\n\n    //copy execution on click\n    copyPasswordBtn.addEventListener('click', function (e) {\n        e.preventDefault();\n        copyPassword();\n    });\n\n    //collapse buttons\n    let collapseButton_1 = document.getElementById('collapseButton_1');\n    let howToUseTheApp = document.getElementById('howToUseTheApp');\n    let toggle = 0;\n    collapseButton_1.addEventListener('click', function () {\n        toggle++;\n        if (toggle === 1) {\n            howToUseTheApp.classList.remove('collapse');\n            howToUseTheApp.classList.add('expand');\n        }\n\n        if (toggle === 2) {\n            howToUseTheApp.classList.remove('expand');\n            howToUseTheApp.classList.add('collapse');\n            toggle = 1;\n            toggle--;\n        }\n    });\n\n    let collapseButton_2 = document.getElementById('collapseButton_2');\n    let about = document.getElementById('about');\n    let toggle2 = 0;\n    collapseButton_2.addEventListener('click', function () {\n        toggle2++;\n        if (toggle2 === 1) {\n            about.classList.remove('collapse');\n            about.classList.add('expand');\n        }\n\n        if (toggle2 === 2) {\n            about.classList.remove('expand');\n            about.classList.add('collapse');\n            toggle2 = 1;\n            toggle2--;\n        }\n    });\n}());\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/"],"sourceRoot":""}
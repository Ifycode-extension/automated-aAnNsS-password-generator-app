{"version":3,"sources":["webpack:///bundle.1f3bdf0c6070e8257b85.js","webpack:///webpack/bootstrap de8dea2a05492941908e","webpack:///./src/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","passwordGenerator","rideOn","errorBox","innerHTML","style","color","errorBoxSmall","passwordUpdate","allowedCharactersFieldValue","charAt","inputLength","currentCharacter","passwordUpdateSmall","larger","document","getElementsByClassName","backgroundColor","padding","fontSize","displayLogic","allowedCharactersField","value","replace","child","getElementsByTagName","parent","parentNode","arr","Array","prototype","indexOf","children","character","length","aRR","outputFieldValue","outputField","lastOutputFieldCharacter","enableButton","copyPasswordBtn","classList","remove","add","disableButton","automate","allowedCharacter","lowercaseCharacters","l","uppercaseCharacters","u","numbers","n","symbolCharacters","s","userApi","addEventListener","Math","floor","random","i","code","createElement","appendChild","match","passwordAnalyser","displayPasswordLength","getElementById","aA","aA_percentage","a_Total","split","A_Total","derived_aA_percentage","aA_to_1_decimalplace","Number","round","height","nN","nN_percentage","n_Total","N_Total","derived_nN_percentage","nN_to_1_decimalplace","sS","sS_percentage","s_Total","S_Total","derived_sS_percentage","sS_to_1_decimalplace","add_aA_nN","displayRatio","backgroundImage","approximateTotal","passwordStrength","noStrengthColors","colorBox_1","colorBox_2","colorBox_3","weakPasswordColors","fairPasswordColors","strongPasswordColors","strength","passwordCommentBox","passwordCommentBoxSmall","copyPassword","select","setSelectionRange","execCommand","e","preventDefault","collapseButton_1","howToUseTheApp","toggle","collapseButton_2","about","toggle2"],"mappings":"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","file":"bundle.1f3bdf0c6070e8257b85.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(2);\n\t\n\t(function () {\n\t\n\t    var allowedCharactersField = document.getElementById('allowedCharactersField');\n\t    var outputField = document.getElementById('outputField');\n\t    var passwordUpdate = document.getElementById('passwordUpdate');\n\t    var passwordUpdateSmall = document.getElementById('passwordUpdateSmall');\n\t    var copyPasswordBtn = document.getElementById('copyPasswordBtn');\n\t    var userApi = document.getElementById('userApi');\n\t    var errorBox = document.getElementById('errorBox');\n\t    var errorBoxSmall = document.getElementById('errorBoxSmall');\n\t\n\t    /*=================== PASSWORD GENERATOR: ========================\n\t    Treat it like a different app i.e. put it in a different function.\n\t    =================================================================*/\n\t\n\t    function passwordGenerator() {\n\t\n\t        var lowercaseCharacters = 'abcdefghijklmnopqrstuvwxyz';\n\t        var uppercaseCharacters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\t        var symbolCharacters = '~!@#$%^&*-_+=<>?';\n\t        var numbers = '0123456789';\n\t\n\t        /*==========================================================\n\t        Generate random numbers to be used later from the characters\n\t        above======================================================*/\n\t        var l = Math.floor(Math.random() * lowercaseCharacters.length);\n\t        var u = Math.floor(Math.random() * uppercaseCharacters.length);\n\t        var s = Math.floor(Math.random() * symbolCharacters.length);\n\t        var n = Math.floor(Math.random() * numbers.length);\n\t\n\t        /*===========================================================================\n\t        if you declare let allowedCharactersFieldValue = allowedCharactersField.value;\n\t        outside password generator function, it won't work on user input\n\t        ============================================================================*/\n\t        var allowedCharactersFieldValue = allowedCharactersField.value;\n\t        var inputLength = allowedCharactersFieldValue.length;\n\t        inputLength -= 1;\n\t\n\t        var currentCharacter = allowedCharactersFieldValue.charAt(inputLength);\n\t        userApi.innerHTML = allowedCharactersField.value.replace(/([b,c,d,e,f,g,h,i,j,k,l,m,o,p,q,r,t,u,v,w,x,y,z,B,C,D,E,F,G,H,I,J,K,L,M,O,P,Q,R,T,U,V,W,X,Y,Z])/g, '').replace(/([`,~,!,@,#,$,%,^,&,*,(,),-,_,+,=,|,;,:,',\",,,<,.,>,?,/\\,[\\]\\\\,{,}, , ])/g, '').replace(/([0-9])/g, '') + ':  ';\n\t\n\t        /*=======================================================\n\t        create code elements for user input processing/conversion\n\t        ========================================================*/\n\t        for (var i = 0; i <= 64; i++) {\n\t            var code = document.createElement(\"code\");\n\t            userApi.appendChild(code);\n\t        }\n\t\n\t        var allowedCharacter = [currentCharacter === 'a', currentCharacter === 'A', currentCharacter === 'n', currentCharacter === 'N', currentCharacter === 's', currentCharacter === 'S', currentCharacter.match(/([a,A,n,N,s,S])/), currentCharacter === ','];\n\t\n\t        function rideOn() {\n\t            errorBox.innerHTML = 'Ride on!';\n\t            errorBox.style.color = 'blue';\n\t            errorBoxSmall.innerHTML = 'Ride on!';\n\t            errorBoxSmall.style.color = 'blue';\n\t            passwordUpdate.innerHTML = '<mark class=\"larger\">' + allowedCharactersFieldValue.charAt(inputLength) + '</mark> randomly added <mark class=\"larger\">' + currentCharacter + '</mark> to your password combo';\n\t            passwordUpdate.style.color = '#000';\n\t            passwordUpdateSmall.innerHTML = '<mark class=\"larger\">' + allowedCharactersFieldValue.charAt(inputLength) + '</mark> added <mark class=\"larger\">' + currentCharacter + '</mark> to your password';\n\t            passwordUpdateSmall.style.color = 'black';\n\t            var larger = document.getElementsByClassName('larger');\n\t            larger[0].style.color = 'white';\n\t            larger[1].style.color = 'white';\n\t            larger[2].style.color = 'white';\n\t            larger[3].style.color = 'white';\n\t            larger[0].style.backgroundColor = '#222';\n\t            larger[1].style.backgroundColor = '#222';\n\t            larger[2].style.backgroundColor = '#222';\n\t            larger[3].style.backgroundColor = '#222';\n\t            larger[0].style.padding = '0 4px';\n\t            larger[1].style.padding = '2px';\n\t            larger[2].style.padding = '0 4px';\n\t            larger[3].style.padding = '2px';\n\t            larger[0].style.fontSize = '1.1em';\n\t            larger[1].style.fontSize = '1.1em';\n\t            larger[2].style.fontSize = '1.1em';\n\t            larger[3].style.fontSize = '1.1em';\n\t        }\n\t\n\t        function displayLogic() {\n\t\n\t            allowedCharactersField.value = allowedCharactersField.value.replace(/([b,c,d,e,f,g,h,i,j,k,l,m,o,p,q,r,t,u,v,w,x,y,z,B,C,D,E,F,G,H,I,J,K,L,M,O,P,Q,R,T,U,V,W,X,Y,Z])/g, '').replace(/([`,~,!,@,#,$,%,^,&,*,(,),-,_,+,=,|,;,:,',\",,,<,.,>,?,/\\,[\\]\\\\,{,}, , ])/g, '').replace(/([0-9])/g, '');\n\t            /*====================================================================\n\t            Use inputLength to find actual array index number of the code elements\n\t            and store inside arr variable (technically, inputLength and arr are one\n\t            and the same...)\n\t            =====================================================================*/\n\t            var child = document.getElementsByTagName('code')[inputLength];\n\t            var parent = child.parentNode;\n\t            var arr = Array.prototype.indexOf.call(parent.children, child);\n\t\n\t            /*================================================================================\n\t            arr increases as user types the allowed characters into the allowedCharactersField,\n\t            and the current code element is filled with the converted values from the automate\n\t            function.\n\t            =================================================================================*/\n\t            var character = document.getElementsByTagName('code');\n\t            character[arr].innerHTML = '' + currentCharacter;\n\t\n\t            if (currentCharacter === '' && allowedCharactersFieldValue.length > 0) {\n\t                //character[arr].innerHTML = '';\n\t                errorBox.innerHTML = 'Character not allowed!';\n\t                errorBox.style.color = 'red';\n\t                errorBoxSmall.innerHTML = 'Character not allowed!';\n\t                errorBoxSmall.style.color = 'red';\n\t                passwordUpdateSmall.innerHTML = 'Type in any of these: aAnNsS';\n\t                passwordUpdateSmall.style.color = 'black';\n\t                passwordUpdate.innerHTML = 'Type in any of these alphabeths: aAnNsS';\n\t                passwordUpdate.style.color = 'black';\n\t            } else {\n\t                rideOn();\n\t            }\n\t\n\t            /*==============================================\n\t            The goal is to get both user input and generated\n\t            password to be displayed in the format described\n\t            below.\n\t            e.g Using a 10 digit password as example, code\n\t            elements from index 0 - 9 will be filled up in\n\t            the manner below.\n\t             When user is typing in characters:\n\t            0\n\t            01\n\t            012\n\t            0123\n\t            01234\n\t            012345\n\t            0123456\n\t            01234567\n\t            012345678\n\t            0123456789\n\t             When user keeps pressing backspace to remove previously\n\t            entered characters:\n\t             0123456789\n\t            012345678\n\t            01234567\n\t            0123456\n\t            012345\n\t            01234\n\t            0123\n\t            012\n\t            01\n\t            0\n\t             To achieve this I get the next code element (with ARR += 1)\n\t            and fill it with empty string. aRR -= 1 then cleans up any\n\t            bug created in the process when code elements are cleaned up\n\t            to array index of -1.\n\t            ==========================================================*/\n\t            var aRR = arr;\n\t            aRR += 1;\n\t            character[aRR].innerHTML = '';\n\t\n\t            if (arr < 0 && inputLength < 0) {\n\t                aRR -= 1;\n\t                character[aRR].innerHTML = '';\n\t            }\n\t\n\t            /*==================================================\n\t            Display the code elements content in the outputField\n\t            ===================================================*/\n\t            var outputFieldValue = '' + character[0].innerHTML + character[1].innerHTML + character[2].innerHTML + character[3].innerHTML + character[4].innerHTML + character[5].innerHTML + character[6].innerHTML + character[7].innerHTML + character[8].innerHTML + character[9].innerHTML + character[10].innerHTML + character[11].innerHTML + character[12].innerHTML + character[13].innerHTML + character[14].innerHTML + character[15].innerHTML + character[16].innerHTML + character[17].innerHTML + character[18].innerHTML + character[19].innerHTML + character[20].innerHTML + character[21].innerHTML + character[22].innerHTML + character[23].innerHTML + character[24].innerHTML + character[25].innerHTML + character[26].innerHTML + character[27].innerHTML + character[28].innerHTML + character[29].innerHTML + character[30].innerHTML + character[31].innerHTML + character[32].innerHTML + character[33].innerHTML + character[34].innerHTML + character[35].innerHTML + character[36].innerHTML + character[37].innerHTML + character[38].innerHTML + character[39].innerHTML + character[40].innerHTML + character[41].innerHTML + character[42].innerHTML + character[43].innerHTML + character[44].innerHTML + character[45].innerHTML + character[46].innerHTML + character[47].innerHTML + character[48].innerHTML + character[49].innerHTML + character[50].innerHTML + character[51].innerHTML + character[52].innerHTML + character[53].innerHTML + character[54].innerHTML + character[55].innerHTML + character[56].innerHTML + character[57].innerHTML + character[58].innerHTML + character[59].innerHTML + character[60].innerHTML + character[61].innerHTML + character[62].innerHTML + character[63].innerHTML;\n\t            outputField.value = outputFieldValue;\n\t\n\t            //input fields output these signs as &amp; &lt; &gt; - Replace with & < >\n\t            outputField.value = outputField.value.replace(/&amp;/g, '&').replace(/&lt;/g, '<').replace(/&gt;/g, '>');\n\t\n\t            /*-----------------------------------------------------------------------------\n\t            Trying to correct a bug with the next 14 lines\n\t            ----------------| correction start |------------------------------------------*/\n\t            var lastOutputFieldCharacter = outputField.value.charAt(aRR);\n\t            /*\n\t            console.log(lastOutputFieldCharacter);\n\t            console.log(outputField.value.indexOf(lastOutputFieldCharacter));\n\t            console.log(outputField.value.length);\n\t            console.log(allowedCharactersField.value.length);\n\t            */\n\t            if (outputField.value.length > allowedCharactersField.value.length) {\n\t                outputField.value = outputField.value.replace(lastOutputFieldCharacter, '');\n\t                /*\n\t                aRR -= 1;\n\t                console.log(character[aRR]);\n\t                */\n\t            }\n\t            //----------------| correction end |------------------------------------------\n\t        }\n\t\n\t        //functions for copy button (enable and disable)\n\t        function enableButton() {\n\t            copyPasswordBtn.classList.remove('lightgrey');\n\t            copyPasswordBtn.classList.add('darkgrey');\n\t            if (allowedCharactersFieldValue.length < 8) {\n\t                copyPasswordBtn.classList.remove('darkgrey');\n\t                copyPasswordBtn.classList.add('lightgrey');\n\t            }\n\t        }\n\t\n\t        function disableButton() {\n\t            copyPasswordBtn.classList.remove('darkgrey');\n\t            copyPasswordBtn.classList.add('lightgrey');\n\t        }\n\t\n\t        function automate() {\n\t            /*===========================================================\n\t            Listen for allowed characters a, A, n, N, s and S and convert:\n\t            1. a to random lowercase alphabeth\n\t            2. A to random uppercase alphabeth\n\t            3. n and N to random number\n\t            4. s and S to random symbol\n\t            ==============================================================*/\n\t            if (allowedCharacter[0]) {\n\t                currentCharacter = lowercaseCharacters[l];\n\t            }\n\t\n\t            if (allowedCharacter[1]) {\n\t                currentCharacter = uppercaseCharacters[u];\n\t            }\n\t\n\t            if (allowedCharacter[2]) {\n\t                currentCharacter = numbers[n];\n\t            }\n\t\n\t            if (allowedCharacter[3]) {\n\t                currentCharacter = numbers[n];\n\t            }\n\t\n\t            if (allowedCharacter[4]) {\n\t                currentCharacter = symbolCharacters[s];\n\t            }\n\t\n\t            if (allowedCharacter[5]) {\n\t                currentCharacter = symbolCharacters[s];\n\t            }\n\t\n\t            if (!allowedCharacter[6]) {\n\t                currentCharacter = '';\n\t                allowedCharactersField.value = allowedCharactersField.value.replace(/([b,c,d,e,f,g,h,i,j,k,l,m,o,p,q,r,t,u,v,w,x,y,z,B,C,D,E,F,G,H,I,J,K,L,M,O,P,Q,R,T,U,V,W,X,Y,Z])/g, '').replace(/([`,~,!,@,#,$,%,^,&,*,(,),-,_,+,=,|,;,:,',\",,,<,.,>,?,/\\,[\\]\\\\,{,}, , ])/g, '').replace(/([0-9])/g, '');\n\t            }\n\t\n\t            //Specially taking care of troublesome comma (,)\n\t            if (allowedCharacter[7]) {\n\t                currentCharacter = '';\n\t                allowedCharactersField.value = allowedCharactersField.value.replace(',', '');\n\t            }\n\t\n\t            //call button functions\n\t            if (allowedCharactersFieldValue.length < 8) {\n\t                disableButton();\n\t            } else {\n\t                enableButton();\n\t            }\n\t\n\t            //Execution\n\t            if (!allowedCharacter[0] && !allowedCharacter[1] && !allowedCharacter[2] && !allowedCharacter[3] && !allowedCharacter[4] && !allowedCharacter[5] && allowedCharactersFieldValue.length === 0) {\n\t                errorBox.innerHTML = 'Success or error message displays here';\n\t                errorBox.style.color = 'grey';\n\t                errorBoxSmall.innerHTML = 'Success or error message here';\n\t                errorBoxSmall.style.color = 'grey';\n\t                passwordUpdate.innerHTML = 'Latest update to password displays here';\n\t                passwordUpdate.style.color = 'grey';\n\t                passwordUpdateSmall.innerHTML = 'Latest update to password here';\n\t                passwordUpdateSmall.style.color = 'grey';\n\t                userApi.innerHTML = 'Final value displays here';\n\t                userApi.style.color = 'grey';\n\t                outputField.value = '';\n\t            } else {\n\t                rideOn();\n\t                userApi.style.color = 'black';\n\t                if (currentCharacter === '') {\n\t                    passwordUpdate.innerHTML = '';\n\t                    passwordUpdateSmall.innerHTML = '';\n\t                }\n\t                allowedCharactersField.addEventListener('keyup', displayLogic);\n\t            }\n\t        }\n\t\n\t        automate();\n\t    }\n\t\n\t    /*=================== PASSWORD ANALYSER: =============================\n\t               (Ratio & graphical analysis calculations)\n\t     Treat it like a different app i.e. putting it in a different function.\n\t     =====================================================================*/\n\t\n\t    function passwordAnalyser() {\n\t\n\t        var allowedCharactersFieldValue = allowedCharactersField.value;\n\t        var displayPasswordLength = document.getElementById('displayPasswordLength');\n\t        displayPasswordLength.innerHTML = 'Password Length: ' + allowedCharactersFieldValue.length;\n\t\n\t        //calculate for a & A\n\t        var aA = document.getElementById('aA');\n\t        var aA_percentage = document.getElementById('aA_percentage');\n\t        /*==========================================\n\t        Get the number of a and A in the input field\n\t        ===========================================*/\n\t        var a_Total = allowedCharactersFieldValue.split('a').length - 1;\n\t        var A_Total = allowedCharactersFieldValue.split('A').length - 1;\n\t        var derived_aA_percentage = (a_Total + A_Total) / allowedCharactersFieldValue.length * 100;\n\t        /*=======================================================================\n\t        exponential equation calculation: 'e1' & 'e-1' for 1 decimal place, 'e2'\n\t        & 'e-2' for 2 decimal places etc. I'm using 1 decimal place for this app.\n\t        ========================================================================*/\n\t        var aA_to_1_decimalplace = Number(Math.round(derived_aA_percentage + 'e1') + 'e-1');\n\t        aA_percentage.innerHTML = aA_to_1_decimalplace + '%';\n\t        aA.style.height = aA_to_1_decimalplace + '%';\n\t\n\t        //calculate for n & N\n\t        var nN = document.getElementById('nN');\n\t        var nN_percentage = document.getElementById('nN_percentage');\n\t        var n_Total = allowedCharactersFieldValue.split('n').length - 1;\n\t        var N_Total = allowedCharactersFieldValue.split('N').length - 1;\n\t        var derived_nN_percentage = (n_Total + N_Total) / allowedCharactersFieldValue.length * 100;\n\t        var nN_to_1_decimalplace = Number(Math.round(derived_nN_percentage + 'e1') + 'e-1');\n\t        nN_percentage.innerHTML = nN_to_1_decimalplace + '%';\n\t        nN.style.height = nN_to_1_decimalplace + '%';\n\t\n\t        //calculate for s & S\n\t        var sS = document.getElementById('sS');\n\t        var sS_percentage = document.getElementById('sS_percentage');\n\t        var s_Total = allowedCharactersFieldValue.split('s').length - 1;\n\t        var S_Total = allowedCharactersFieldValue.split('S').length - 1;\n\t        var derived_sS_percentage = (s_Total + S_Total) / allowedCharactersFieldValue.length * 100;\n\t        var sS_to_1_decimalplace = Number(Math.round(derived_sS_percentage + 'e1') + 'e-1');\n\t        sS_percentage.innerHTML = sS_to_1_decimalplace + '%';\n\t        sS.style.height = sS_to_1_decimalplace + '%';\n\t\n\t        var add_aA_nN = aA_to_1_decimalplace + nN_to_1_decimalplace;\n\t\n\t        var displayRatio = document.getElementById('displayRatio');\n\t        displayRatio.style.backgroundImage = 'linear-gradient(to right, #0059ff ' + aA_to_1_decimalplace + '%, #02ec7f ' + aA_to_1_decimalplace + '%, #02ec7f ' + add_aA_nN + '%, #ff7b00 ' + add_aA_nN + '%)';\n\t\n\t        var approximateTotal = document.getElementById('approximateTotal');\n\t        approximateTotal.innerHTML = 'Note: aA% + nN% + sS% &#8773 100%';\n\t        approximateTotal.style.color = 'black';\n\t\n\t        if (allowedCharactersFieldValue.length === 0) {\n\t            aA.style.height = '0px';\n\t            nN.style.height = '0px';\n\t            sS.style.height = '0px';\n\t            aA_percentage.innerHTML = '0%'; //to avoid writing NaN when back to zero etc.\n\t            nN_percentage.innerHTML = '0%';\n\t            sS_percentage.innerHTML = '0%';\n\t            displayRatio.style.backgroundImage = 'none';\n\t            approximateTotal.style.color = 'grey';\n\t        }\n\t    }\n\t\n\t    /*=================== PASSWORD STRENGTH: =========================\n\t    Treat it like a different app i.e. put it in a different function.\n\t    =================================================================*/\n\t\n\t    function passwordStrength() {\n\t\n\t        var allowedCharactersFieldValue = allowedCharactersField.value;\n\t        var strength = 0;\n\t\n\t        var passwordCommentBox = document.getElementById('passwordCommentBox');\n\t        var passwordCommentBoxSmall = document.getElementById('passwordCommentBoxSmall');\n\t\n\t        if (allowedCharactersFieldValue.length < 1) {\n\t            passwordCommentBox.innerHTML = '8 characters min | 64 characters max';\n\t            passwordCommentBox.classList.remove('black');\n\t            passwordCommentBox.classList.add('grey');\n\t            passwordCommentBoxSmall.innerHTML = '8 char min | 64 char max';\n\t            passwordCommentBoxSmall.classList.remove('black');\n\t            passwordCommentBoxSmall.classList.add('grey');\n\t        } else {\n\t            passwordCommentBox.innerHTML = 'Too short';\n\t            passwordCommentBox.classList.add('black');\n\t            passwordCommentBoxSmall.innerHTML = 'Too short';\n\t            passwordCommentBoxSmall.classList.add('black');\n\t        }\n\t\n\t        //whatever you type in first: whether its an alphabeth, number or symbol password strength increases by 1\n\t        if (allowedCharactersFieldValue.length > 0) strength += 1;\n\t\n\t        //increase length by 1 for a mix of alphabeth and number\n\t        if (allowedCharactersFieldValue.match(/([a,A])/) && allowedCharactersFieldValue.match(/([n,N])/)) strength += 1;\n\t\n\t        //increase length by 1 for a mix of alphabeth and symbol\n\t        if (allowedCharactersFieldValue.match(/([a,A])/) && allowedCharactersFieldValue.match(/([s,S])/)) strength += 1;\n\t\n\t        //increase length by 1 for a mix of lowercase and uppercase alphabeths\n\t        if (allowedCharactersFieldValue.match(/([a])/) && allowedCharactersFieldValue.match(/([A])/)) strength += 1;\n\t\n\t        //increase length by 1 for a mix of number and symbol\n\t        if (allowedCharactersFieldValue.match(/([n,N])/) && allowedCharactersFieldValue.match(/([s,S])/)) strength += 1;\n\t\n\t        var colorBox_1 = document.getElementById('colorBox_1');\n\t        var colorBox_2 = document.getElementById('colorBox_2');\n\t        var colorBox_3 = document.getElementById('colorBox_3');\n\t\n\t        function noStrengthColors() {\n\t            colorBox_1.classList.remove('weak', 'fair', 'strong');\n\t            colorBox_2.classList.remove('weak', 'fair', 'strong');\n\t            colorBox_3.classList.remove('weak', 'fair', 'strong');\n\t        }\n\t\n\t        function weakPasswordColors() {\n\t            colorBox_1.classList.remove('fair');\n\t            colorBox_1.classList.add('weak');\n\t            colorBox_2.classList.remove('fair');\n\t            colorBox_2.classList.add('lightgrey');\n\t        }\n\t\n\t        function fairPasswordColors() {\n\t            colorBox_1.classList.add('fair');\n\t            colorBox_2.classList.add('fair');\n\t            colorBox_3.classList.add('lightgrey');\n\t            colorBox_1.classList.remove('strong');\n\t            colorBox_2.classList.remove('strong');\n\t            colorBox_3.classList.remove('strong');\n\t        }\n\t\n\t        function strongPasswordColors() {\n\t            colorBox_1.classList.add('strong');\n\t            colorBox_2.classList.add('strong');\n\t            colorBox_3.classList.add('strong');\n\t        }\n\t\n\t        if (strength < 1) {\n\t            noStrengthColors();\n\t        } else if (strength === 1 && allowedCharactersFieldValue.length < 8) {\n\t            passwordCommentBox.innerHTML = 'Weak - Too short';\n\t            passwordCommentBoxSmall.innerHTML = 'Weak - Too short';\n\t            weakPasswordColors();\n\t        } else if (strength === 1 && allowedCharactersFieldValue.length >= 8) {\n\t            passwordCommentBox.innerHTML = 'Weak Password';\n\t            passwordCommentBoxSmall.innerHTML = 'Weak Password';\n\t            weakPasswordColors();\n\t        } else if (strength === 2 && allowedCharactersFieldValue.length < 8) {\n\t            passwordCommentBox.innerHTML = 'Fair - Too short';\n\t            passwordCommentBoxSmall.innerHTML = 'Fair - Too short';\n\t            fairPasswordColors();\n\t        } else if (strength === 2 && allowedCharactersFieldValue.length >= 8) {\n\t            passwordCommentBox.innerHTML = 'Fair Password';\n\t            passwordCommentBoxSmall.innerHTML = 'Fair Password';\n\t            fairPasswordColors();\n\t        } else if (strength >= 3 && allowedCharactersFieldValue.length < 8) {\n\t            passwordCommentBox.innerHTML = 'Strong - Too short';\n\t            passwordCommentBoxSmall.innerHTML = 'Strong - Too short';\n\t            strongPasswordColors();\n\t        } else {\n\t            passwordCommentBox.innerHTML = 'Strong Password';\n\t            passwordCommentBoxSmall.innerHTML = 'Strong Password';\n\t            strongPasswordColors();\n\t        }\n\t    }\n\t\n\t    //call the three functions on input\n\t    allowedCharactersField.addEventListener('input', function () {\n\t        passwordGenerator();\n\t        passwordAnalyser();\n\t        passwordStrength();\n\t    });\n\t\n\t    //copy password\n\t    function copyPassword() {\n\t        var allowedCharactersFieldValue = allowedCharactersField.value;\n\t\n\t        if (allowedCharactersFieldValue.length >= 8) {\n\t            outputField.select();\n\t            outputField.setSelectionRange(0, 99999);\n\t            document.execCommand('copy');\n\t        }\n\t    }\n\t\n\t    //copy execution on click\n\t    copyPasswordBtn.addEventListener('click', function (e) {\n\t        e.preventDefault();\n\t        copyPassword();\n\t    });\n\t\n\t    //collapse buttons\n\t    var collapseButton_1 = document.getElementById('collapseButton_1');\n\t    var howToUseTheApp = document.getElementById('howToUseTheApp');\n\t    var toggle = 0;\n\t    collapseButton_1.addEventListener('click', function () {\n\t        toggle++;\n\t        if (toggle === 1) {\n\t            howToUseTheApp.classList.remove('collapse');\n\t            howToUseTheApp.classList.add('expand');\n\t        }\n\t\n\t        if (toggle === 2) {\n\t            howToUseTheApp.classList.remove('expand');\n\t            howToUseTheApp.classList.add('collapse');\n\t            toggle = 1;\n\t            toggle--;\n\t        }\n\t    });\n\t\n\t    var collapseButton_2 = document.getElementById('collapseButton_2');\n\t    var about = document.getElementById('about');\n\t    var toggle2 = 0;\n\t    collapseButton_2.addEventListener('click', function () {\n\t        toggle2++;\n\t        if (toggle2 === 1) {\n\t            about.classList.remove('collapse');\n\t            about.classList.add('expand');\n\t        }\n\t\n\t        if (toggle2 === 2) {\n\t            about.classList.remove('expand');\n\t            about.classList.add('collapse');\n\t            toggle2 = 1;\n\t            toggle2--;\n\t        }\n\t    });\n\t})(); /*=============================================\n\t        Author: Obiagba Mary\n\t        Published: August 2020\n\t        Track: Mobile Web Specialist Track.\n\t        About: Google Africa Developer Scholarship\n\t        2020 workshop exercise for building a javascript\n\t        dev environment course by Cory House.\n\t      \n\t        Note: For Lite-server to watch files while in\n\t        development mode, add CSS & JS in index.html via\n\t        link & script tags respectively(to be removed in\n\t        production). Also comment out css import in the\n\t        js file (add back in production).\n\t      ===============================================*/\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.1f3bdf0c6070e8257b85.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap de8dea2a05492941908e\n **/","/*=============================================\n  Author: Obiagba Mary\n  Published: August 2020\n  Track: Mobile Web Specialist Track.\n  About: Google Africa Developer Scholarship\n  2020 workshop exercise for building a javascript\n  dev environment course by Cory House.\n\n  Note: For Lite-server to watch files while in\n  development mode, add CSS & JS in index.html via\n  link & script tags respectively(to be removed in\n  production). Also comment out css import in the\n  js file (add back in production).\n===============================================*/\n\nimport './css/index.css';\n\n(function(){\n\n    let allowedCharactersField = document.getElementById('allowedCharactersField');\n    let outputField = document.getElementById('outputField');\n    let passwordUpdate = document.getElementById('passwordUpdate');\n    let passwordUpdateSmall = document.getElementById('passwordUpdateSmall');\n    let copyPasswordBtn = document.getElementById('copyPasswordBtn');\n    let userApi = document.getElementById('userApi');\n    let errorBox = document.getElementById('errorBox');\n    let errorBoxSmall = document.getElementById('errorBoxSmall');\n\n    /*=================== PASSWORD GENERATOR: ========================\n    Treat it like a different app i.e. put it in a different function.\n    =================================================================*/\n\n    function passwordGenerator() {\n\n        let lowercaseCharacters = 'abcdefghijklmnopqrstuvwxyz';\n        let uppercaseCharacters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        let symbolCharacters = '~!@#$%^&*-_+=<>?';\n        let numbers = '0123456789';\n\n        /*==========================================================\n        Generate random numbers to be used later from the characters\n        above======================================================*/\n        let l = Math.floor(Math.random()*lowercaseCharacters.length);\n        let u = Math.floor(Math.random()*uppercaseCharacters.length);\n        let s = Math.floor(Math.random()*symbolCharacters.length);\n        let n = Math.floor(Math.random()*numbers.length);\n\n        /*===========================================================================\n        if you declare let allowedCharactersFieldValue = allowedCharactersField.value;\n        outside password generator function, it won't work on user input\n        ============================================================================*/\n        let allowedCharactersFieldValue = allowedCharactersField.value;\n        let inputLength = allowedCharactersFieldValue.length;\n        inputLength -= 1;\n\n        let currentCharacter = allowedCharactersFieldValue.charAt(inputLength);\n        userApi.innerHTML = `${allowedCharactersField.value.replace(/([b,c,d,e,f,g,h,i,j,k,l,m,o,p,q,r,t,u,v,w,x,y,z,B,C,D,E,F,G,H,I,J,K,L,M,O,P,Q,R,T,U,V,W,X,Y,Z])/g, '').replace(/([`,~,!,@,#,$,%,^,&,*,(,),-,_,+,=,|,;,:,',\",,,<,.,>,?,/\\,[\\]\\\\,{,}, , ])/g, '').replace(/([0-9])/g, '')}:  `;\n\n        /*=======================================================\n        create code elements for user input processing/conversion\n        ========================================================*/\n        for (let i = 0; i <= 64; i++) {\n            let code = document.createElement(\"code\");\n            userApi.appendChild(code);\n        }\n\n        let allowedCharacter = [\n            currentCharacter === 'a',\n            currentCharacter === 'A',\n            currentCharacter === 'n',\n            currentCharacter === 'N',\n            currentCharacter === 's',\n            currentCharacter === 'S',\n            currentCharacter.match(/([a,A,n,N,s,S])/),\n            currentCharacter === ','\n        ]\n\n        function rideOn() {\n            errorBox.innerHTML = 'Ride on!';\n            errorBox.style.color = 'blue';\n            errorBoxSmall.innerHTML = 'Ride on!';\n            errorBoxSmall.style.color = 'blue';\n            passwordUpdate.innerHTML = `<mark class=\"larger\">${allowedCharactersFieldValue.charAt(inputLength)}</mark> randomly added <mark class=\"larger\">${currentCharacter}</mark> to your password combo`;\n            passwordUpdate.style.color = '#000';\n            passwordUpdateSmall.innerHTML = `<mark class=\"larger\">${allowedCharactersFieldValue.charAt(inputLength)}</mark> added <mark class=\"larger\">${currentCharacter}</mark> to your password`;\n            passwordUpdateSmall.style.color = 'black';\n            let larger = document.getElementsByClassName('larger');\n            larger[0].style.color = 'white';\n            larger[1].style.color = 'white';\n            larger[2].style.color = 'white';\n            larger[3].style.color = 'white';\n            larger[0].style.backgroundColor = '#222';\n            larger[1].style.backgroundColor = '#222';\n            larger[2].style.backgroundColor = '#222';\n            larger[3].style.backgroundColor = '#222';\n            larger[0].style.padding = '0 4px';\n            larger[1].style.padding = '2px';\n            larger[2].style.padding = '0 4px';\n            larger[3].style.padding = '2px';\n            larger[0].style.fontSize = '1.1em';\n            larger[1].style.fontSize = '1.1em';\n            larger[2].style.fontSize = '1.1em';\n            larger[3].style.fontSize = '1.1em';\n        }\n\n\n        function displayLogic() {\n\n            allowedCharactersField.value = allowedCharactersField.value.replace(/([b,c,d,e,f,g,h,i,j,k,l,m,o,p,q,r,t,u,v,w,x,y,z,B,C,D,E,F,G,H,I,J,K,L,M,O,P,Q,R,T,U,V,W,X,Y,Z])/g, '').replace(/([`,~,!,@,#,$,%,^,&,*,(,),-,_,+,=,|,;,:,',\",,,<,.,>,?,/\\,[\\]\\\\,{,}, , ])/g, '').replace(/([0-9])/g, '');\n            /*====================================================================\n            Use inputLength to find actual array index number of the code elements\n            and store inside arr variable (technically, inputLength and arr are one\n            and the same...)\n            =====================================================================*/\n            let child = document.getElementsByTagName('code')[inputLength];\n            let parent = child.parentNode;\n            let arr = Array.prototype.indexOf.call(parent.children, child);\n\n            /*================================================================================\n            arr increases as user types the allowed characters into the allowedCharactersField,\n            and the current code element is filled with the converted values from the automate\n            function.\n            =================================================================================*/\n            let character = document.getElementsByTagName('code');\n            character[arr].innerHTML = `${currentCharacter}`;\n\n            if (currentCharacter === '' && allowedCharactersFieldValue.length > 0) {\n                //character[arr].innerHTML = '';\n                errorBox.innerHTML = `Character not allowed!`;\n                errorBox.style.color = 'red';\n                errorBoxSmall.innerHTML = `Character not allowed!`;\n                errorBoxSmall.style.color = 'red';\n                passwordUpdateSmall.innerHTML = 'Type in any of these: aAnNsS';\n                passwordUpdateSmall.style.color = 'black';\n                passwordUpdate.innerHTML = 'Type in any of these alphabeths: aAnNsS';\n                passwordUpdate.style.color = 'black';\n            }else {\n                rideOn();\n            }\n\n            /*==============================================\n            The goal is to get both user input and generated\n            password to be displayed in the format described\n            below.\n            e.g Using a 10 digit password as example, code\n            elements from index 0 - 9 will be filled up in\n            the manner below.\n\n            When user is typing in characters:\n            0\n            01\n            012\n            0123\n            01234\n            012345\n            0123456\n            01234567\n            012345678\n            0123456789\n\n            When user keeps pressing backspace to remove previously\n            entered characters:\n\n            0123456789\n            012345678\n            01234567\n            0123456\n            012345\n            01234\n            0123\n            012\n            01\n            0\n\n            To achieve this I get the next code element (with ARR += 1)\n            and fill it with empty string. aRR -= 1 then cleans up any\n            bug created in the process when code elements are cleaned up\n            to array index of -1.\n            ==========================================================*/\n            let aRR = arr;\n            aRR += 1;\n            character[aRR].innerHTML = '';\n\n            if (arr < 0 && inputLength < 0) {\n                aRR -= 1;\n                character[aRR].innerHTML = '';\n            }\n\n            /*==================================================\n            Display the code elements content in the outputField\n            ===================================================*/\n            let outputFieldValue = `${character[0].innerHTML}${character[1].innerHTML}${character[2].innerHTML}${character[3].innerHTML}${character[4].innerHTML}${character[5].innerHTML}${character[6].innerHTML}${character[7].innerHTML}${character[8].innerHTML}${character[9].innerHTML}${character[10].innerHTML}${character[11].innerHTML}${character[12].innerHTML}${character[13].innerHTML}${character[14].innerHTML}${character[15].innerHTML}${character[16].innerHTML}${character[17].innerHTML}${character[18].innerHTML}${character[19].innerHTML}${character[20].innerHTML}${character[21].innerHTML}${character[22].innerHTML}${character[23].innerHTML}${character[24].innerHTML}${character[25].innerHTML}${character[26].innerHTML}${character[27].innerHTML}${character[28].innerHTML}${character[29].innerHTML}${character[30].innerHTML}${character[31].innerHTML}${character[32].innerHTML}${character[33].innerHTML}${character[34].innerHTML}${character[35].innerHTML}${character[36].innerHTML}${character[37].innerHTML}${character[38].innerHTML}${character[39].innerHTML}${character[40].innerHTML}${character[41].innerHTML}${character[42].innerHTML}${character[43].innerHTML}${character[44].innerHTML}${character[45].innerHTML}${character[46].innerHTML}${character[47].innerHTML}${character[48].innerHTML}${character[49].innerHTML}${character[50].innerHTML}${character[51].innerHTML}${character[52].innerHTML}${character[53].innerHTML}${character[54].innerHTML}${character[55].innerHTML}${character[56].innerHTML}${character[57].innerHTML}${character[58].innerHTML}${character[59].innerHTML}${character[60].innerHTML}${character[61].innerHTML}${character[62].innerHTML}${character[63].innerHTML}`;\n            outputField.value = outputFieldValue;\n\n            //input fields output these signs as &amp; &lt; &gt; - Replace with & < >\n            outputField.value = outputField.value.replace(/&amp;/g, '&').replace(/&lt;/g, '<').replace(/&gt;/g, '>');\n\n            /*-----------------------------------------------------------------------------\n            Trying to correct a bug with the next 14 lines\n            ----------------| correction start |------------------------------------------*/\n            let lastOutputFieldCharacter = outputField.value.charAt(aRR);\n            /*\n            console.log(lastOutputFieldCharacter);\n            console.log(outputField.value.indexOf(lastOutputFieldCharacter));\n            console.log(outputField.value.length);\n            console.log(allowedCharactersField.value.length);\n            */\n            if (outputField.value.length > allowedCharactersField.value.length) {\n                outputField.value = outputField.value.replace(lastOutputFieldCharacter, '');\n                /*\n                aRR -= 1;\n                console.log(character[aRR]);\n                */\n            }\n            //----------------| correction end |------------------------------------------\n        }\n\n        //functions for copy button (enable and disable)\n        function enableButton() {\n            copyPasswordBtn.classList.remove('lightgrey');\n            copyPasswordBtn.classList.add('darkgrey');\n            if (allowedCharactersFieldValue.length < 8) {\n                copyPasswordBtn.classList.remove('darkgrey');\n                copyPasswordBtn.classList.add('lightgrey');\n            }\n        }\n\n        function disableButton() {\n            copyPasswordBtn.classList.remove('darkgrey');\n            copyPasswordBtn.classList.add('lightgrey');\n        }\n\n        function automate() {\n            /*===========================================================\n            Listen for allowed characters a, A, n, N, s and S and convert:\n            1. a to random lowercase alphabeth\n            2. A to random uppercase alphabeth\n            3. n and N to random number\n            4. s and S to random symbol\n            ==============================================================*/\n            if (allowedCharacter[0]) {\n                currentCharacter = lowercaseCharacters[l];\n            }\n\n            if (allowedCharacter[1]) {\n                currentCharacter = uppercaseCharacters[u];\n            }\n\n            if (allowedCharacter[2]) {\n                currentCharacter = numbers[n];\n            }\n\n            if (allowedCharacter[3]) {\n                currentCharacter = numbers[n];\n            }\n\n            if (allowedCharacter[4]) {\n                currentCharacter = symbolCharacters[s];\n            }\n\n            if (allowedCharacter[5]) {\n                currentCharacter = symbolCharacters[s];\n            }\n\n            if (!allowedCharacter[6]) {\n                currentCharacter = '';\n                allowedCharactersField.value = allowedCharactersField.value.replace(/([b,c,d,e,f,g,h,i,j,k,l,m,o,p,q,r,t,u,v,w,x,y,z,B,C,D,E,F,G,H,I,J,K,L,M,O,P,Q,R,T,U,V,W,X,Y,Z])/g, '').replace(/([`,~,!,@,#,$,%,^,&,*,(,),-,_,+,=,|,;,:,',\",,,<,.,>,?,/\\,[\\]\\\\,{,}, , ])/g, '').replace(/([0-9])/g, '');\n            }\n\n            //Specially taking care of troublesome comma (,)\n            if (allowedCharacter[7]) {\n                currentCharacter = '';\n                allowedCharactersField.value = allowedCharactersField.value.replace(',', '');\n            }\n\n            //call button functions\n            if (allowedCharactersFieldValue.length < 8) {\n                disableButton();\n            }else {\n                enableButton();\n            }\n\n            //Execution\n            if (!allowedCharacter[0] && !allowedCharacter[1] && !allowedCharacter[2] && !allowedCharacter[3] && !allowedCharacter[4] && !allowedCharacter[5] && allowedCharactersFieldValue.length === 0) {\n                errorBox.innerHTML = 'Success or error message displays here';\n                errorBox.style.color = 'grey';\n                errorBoxSmall.innerHTML = 'Success or error message here';\n                errorBoxSmall.style.color = 'grey';\n                passwordUpdate.innerHTML = 'Latest update to password displays here';\n                passwordUpdate.style.color = 'grey';\n                passwordUpdateSmall.innerHTML = 'Latest update to password here';\n                passwordUpdateSmall.style.color = 'grey';\n                userApi.innerHTML = 'Final value displays here';\n                userApi.style.color = 'grey';\n                outputField.value = '';\n            }else {\n                rideOn();\n                userApi.style.color = 'black';\n                if (currentCharacter === '') {\n                    passwordUpdate.innerHTML = '';\n                    passwordUpdateSmall.innerHTML = '';\n                }\n                allowedCharactersField.addEventListener('keyup', displayLogic);\n            }\n        }\n\n        automate();\n    }\n\n\n   /*=================== PASSWORD ANALYSER: =============================\n              (Ratio & graphical analysis calculations)\n    Treat it like a different app i.e. putting it in a different function.\n    =====================================================================*/\n\n    function passwordAnalyser() {\n\n        let allowedCharactersFieldValue = allowedCharactersField.value;\n        let displayPasswordLength = document.getElementById('displayPasswordLength');\n        displayPasswordLength.innerHTML = `Password Length: ${allowedCharactersFieldValue.length}`;\n\n        //calculate for a & A\n        let aA = document.getElementById('aA');\n        let aA_percentage = document.getElementById('aA_percentage');\n        /*==========================================\n        Get the number of a and A in the input field\n        ===========================================*/\n        let a_Total = allowedCharactersFieldValue.split('a').length - 1;\n        let A_Total = allowedCharactersFieldValue.split('A').length - 1;\n        let derived_aA_percentage = ((a_Total+A_Total)/allowedCharactersFieldValue.length)*100;\n        /*=======================================================================\n        exponential equation calculation: 'e1' & 'e-1' for 1 decimal place, 'e2'\n        & 'e-2' for 2 decimal places etc. I'm using 1 decimal place for this app.\n        ========================================================================*/\n        let aA_to_1_decimalplace = Number(Math.round(derived_aA_percentage + 'e1') + 'e-1');\n        aA_percentage.innerHTML = `${aA_to_1_decimalplace}%`;\n        aA.style.height = `${aA_to_1_decimalplace}%`;\n\n        //calculate for n & N\n        let nN = document.getElementById('nN');\n        let nN_percentage = document.getElementById('nN_percentage');\n        let n_Total = allowedCharactersFieldValue.split('n').length - 1;\n        let N_Total = allowedCharactersFieldValue.split('N').length - 1;\n        let derived_nN_percentage = ((n_Total+N_Total)/allowedCharactersFieldValue.length)*100;\n        let nN_to_1_decimalplace = Number(Math.round(derived_nN_percentage + 'e1') + 'e-1');\n        nN_percentage.innerHTML = `${nN_to_1_decimalplace}%`;\n        nN.style.height = `${nN_to_1_decimalplace}%`;\n\n        //calculate for s & S\n        let sS = document.getElementById('sS');\n        let sS_percentage = document.getElementById('sS_percentage');\n        let s_Total = allowedCharactersFieldValue.split('s').length - 1;\n        let S_Total = allowedCharactersFieldValue.split('S').length - 1;\n        let derived_sS_percentage = ((s_Total+S_Total)/allowedCharactersFieldValue.length)*100;\n        let sS_to_1_decimalplace = Number(Math.round(derived_sS_percentage + 'e1') + 'e-1');\n        sS_percentage.innerHTML = `${sS_to_1_decimalplace}%`;\n        sS.style.height = `${sS_to_1_decimalplace}%`;\n\n        let add_aA_nN = aA_to_1_decimalplace + nN_to_1_decimalplace;\n\n        let displayRatio = document.getElementById('displayRatio');\n        displayRatio.style.backgroundImage = `linear-gradient(to right, #0059ff ${aA_to_1_decimalplace}%, #02ec7f ${aA_to_1_decimalplace}%, #02ec7f ${add_aA_nN}%, #ff7b00 ${add_aA_nN}%)`;\n\n        let approximateTotal = document.getElementById('approximateTotal');\n        approximateTotal.innerHTML = 'Note: aA% + nN% + sS% &#8773 100%';\n        approximateTotal.style.color = 'black';\n\n        if (allowedCharactersFieldValue.length === 0) {\n            aA.style.height = '0px';\n            nN.style.height = '0px';\n            sS.style.height = '0px';\n            aA_percentage.innerHTML = '0%'; //to avoid writing NaN when back to zero etc.\n            nN_percentage.innerHTML = '0%';\n            sS_percentage.innerHTML = '0%';\n            displayRatio.style.backgroundImage = 'none';\n            approximateTotal.style.color = 'grey';\n        }\n    }\n\n    /*=================== PASSWORD STRENGTH: =========================\n    Treat it like a different app i.e. put it in a different function.\n    =================================================================*/\n\n    function passwordStrength() {\n\n        let allowedCharactersFieldValue = allowedCharactersField.value;\n        let strength = 0;\n\n        let passwordCommentBox = document.getElementById('passwordCommentBox');\n        let passwordCommentBoxSmall = document.getElementById('passwordCommentBoxSmall');\n\n        if (allowedCharactersFieldValue.length < 1) {\n            passwordCommentBox.innerHTML = '8 characters min | 64 characters max';\n            passwordCommentBox.classList.remove('black');\n            passwordCommentBox.classList.add('grey');\n            passwordCommentBoxSmall.innerHTML = '8 char min | 64 char max';\n            passwordCommentBoxSmall.classList.remove('black');\n            passwordCommentBoxSmall.classList.add('grey');\n        }else {\n            passwordCommentBox.innerHTML = 'Too short';\n            passwordCommentBox.classList.add('black');\n            passwordCommentBoxSmall.innerHTML = 'Too short';\n            passwordCommentBoxSmall.classList.add('black');\n        }\n\n        //whatever you type in first: whether its an alphabeth, number or symbol password strength increases by 1\n        if (allowedCharactersFieldValue.length > 0) strength += 1;\n\n        //increase length by 1 for a mix of alphabeth and number\n        if (allowedCharactersFieldValue.match(/([a,A])/) && allowedCharactersFieldValue.match(/([n,N])/)) strength += 1;\n\n        //increase length by 1 for a mix of alphabeth and symbol\n        if (allowedCharactersFieldValue.match(/([a,A])/) && allowedCharactersFieldValue.match(/([s,S])/)) strength += 1;\n\n        //increase length by 1 for a mix of lowercase and uppercase alphabeths\n        if (allowedCharactersFieldValue.match(/([a])/) && allowedCharactersFieldValue.match(/([A])/)) strength += 1;\n\n        //increase length by 1 for a mix of number and symbol\n        if (allowedCharactersFieldValue.match(/([n,N])/) && allowedCharactersFieldValue.match(/([s,S])/)) strength += 1;\n\n        let colorBox_1 = document.getElementById('colorBox_1');\n        let colorBox_2 = document.getElementById('colorBox_2');\n        let colorBox_3 = document.getElementById('colorBox_3');\n\n        function noStrengthColors(){\n            colorBox_1.classList.remove('weak', 'fair', 'strong');\n            colorBox_2.classList.remove('weak', 'fair', 'strong');\n            colorBox_3.classList.remove('weak', 'fair', 'strong');\n        }\n\n        function weakPasswordColors(){\n            colorBox_1.classList.remove('fair');\n            colorBox_1.classList.add('weak');\n            colorBox_2.classList.remove('fair');\n            colorBox_2.classList.add('lightgrey');\n        }\n\n        function fairPasswordColors(){\n            colorBox_1.classList.add('fair');\n            colorBox_2.classList.add('fair');\n            colorBox_3.classList.add('lightgrey');\n            colorBox_1.classList.remove('strong');\n            colorBox_2.classList.remove('strong');\n            colorBox_3.classList.remove('strong');\n        }\n\n        function strongPasswordColors() {\n            colorBox_1.classList.add('strong');\n            colorBox_2.classList.add('strong');\n            colorBox_3.classList.add('strong');\n        }\n\n        if (strength < 1) {\n           noStrengthColors();\n        }else if (strength === 1 && allowedCharactersFieldValue.length < 8) {\n            passwordCommentBox.innerHTML = 'Weak - Too short';\n            passwordCommentBoxSmall.innerHTML = 'Weak - Too short';\n            weakPasswordColors();\n        }else if (strength === 1 && allowedCharactersFieldValue.length >= 8) {\n            passwordCommentBox.innerHTML = 'Weak Password';\n            passwordCommentBoxSmall.innerHTML = 'Weak Password';\n            weakPasswordColors()\n        }else if (strength === 2 && allowedCharactersFieldValue.length < 8) {\n            passwordCommentBox.innerHTML = 'Fair - Too short';\n            passwordCommentBoxSmall.innerHTML = 'Fair - Too short';\n            fairPasswordColors();\n        }else if (strength === 2 && allowedCharactersFieldValue.length >= 8) {\n            passwordCommentBox.innerHTML = 'Fair Password';\n            passwordCommentBoxSmall.innerHTML = 'Fair Password';\n            fairPasswordColors();\n        }else if (strength >= 3 && allowedCharactersFieldValue.length < 8) {\n            passwordCommentBox.innerHTML = 'Strong - Too short';\n            passwordCommentBoxSmall.innerHTML = 'Strong - Too short';\n            strongPasswordColors();\n        }else {\n            passwordCommentBox.innerHTML = 'Strong Password';\n            passwordCommentBoxSmall.innerHTML = 'Strong Password';\n            strongPasswordColors();\n        }\n    }\n\n    //call the three functions on input\n    allowedCharactersField.addEventListener('input', function() {\n        passwordGenerator();\n        passwordAnalyser();\n        passwordStrength();\n    });\n\n    //copy password\n    function copyPassword() {\n        let allowedCharactersFieldValue = allowedCharactersField.value;\n\n        if (allowedCharactersFieldValue.length >= 8) {\n            outputField.select();\n            outputField.setSelectionRange(0, 99999);\n            document.execCommand('copy');\n        }\n    }\n\n    //copy execution on click\n    copyPasswordBtn.addEventListener('click', function (e) {\n        e.preventDefault();\n        copyPassword();\n    });\n\n    //collapse buttons\n    let collapseButton_1 = document.getElementById('collapseButton_1');\n    let howToUseTheApp = document.getElementById('howToUseTheApp');\n    let toggle = 0;\n    collapseButton_1.addEventListener('click', function () {\n        toggle++;\n        if (toggle === 1) {\n            howToUseTheApp.classList.remove('collapse');\n            howToUseTheApp.classList.add('expand');\n        }\n\n        if (toggle === 2) {\n            howToUseTheApp.classList.remove('expand');\n            howToUseTheApp.classList.add('collapse');\n            toggle = 1;\n            toggle--;\n        }\n    });\n\n    let collapseButton_2 = document.getElementById('collapseButton_2');\n    let about = document.getElementById('about');\n    let toggle2 = 0;\n    collapseButton_2.addEventListener('click', function () {\n        toggle2++;\n        if (toggle2 === 1) {\n            about.classList.remove('collapse');\n            about.classList.add('expand');\n        }\n\n        if (toggle2 === 2) {\n            about.classList.remove('expand');\n            about.classList.add('collapse');\n            toggle2 = 1;\n            toggle2--;\n        }\n    });\n}());\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/"],"sourceRoot":""}